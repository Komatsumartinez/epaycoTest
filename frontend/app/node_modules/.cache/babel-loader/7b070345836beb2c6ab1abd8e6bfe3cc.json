{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\martineztrujillo.8\\\\Downloads\\\\test-epayco-master\\\\test-epayco-master\\\\frontend\\\\app\\\\src\\\\pages\\\\Billetera.jsx\";\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport { GlobalState, reducer, initialState } from '../store/store';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\nimport moment from 'moment';\nimport StyledBilletera from '../styles/StyledBilletera';\naxios.defaults.withCredentials = true;\n\nconst Billetera = ({\n  history\n}) => {\n  const initialData = {\n    cliente: '',\n    documento: '',\n    saldo: 0,\n    recarga: 0,\n    ultima_actividad: '',\n    token: 0,\n    action: 'consultar',\n    monto_pago: 0,\n    mail: '',\n    celular: null\n  };\n  const [FormData, setFormData] = useState(initialData);\n  const [InforBilletera, setInforBilletera] = useState(initialData);\n\n  const onChange = e => {\n    //console.log([e.target.name], e.target.value);\n    setFormData({ ...FormData,\n      [e.target.name]: e.target.value\n    }); //console.log(FormData, \"FORMDATA\");\n  };\n\n  const onChangePagarConfirmar = e => {\n    //console.log([e.target.name], e.target.value);\n    setInforBilletera({ ...InforBilletera,\n      [e.target.name]: e.target.value\n    });\n    console.log(InforBilletera, \"SALDO A PAGAR\");\n  };\n\n  const Recargar = () => {\n    setInforBilletera({ ...InforBilletera,\n      action: 'recargar'\n    });\n    console.log(FormData, \"FORM DATa DESPUES DE PREPAGAR\");\n    let {\n      recarga,\n      saldo,\n      documento,\n      celular\n    } = InforBilletera;\n    saldo = parseInt(saldo);\n    recarga = parseInt(recarga);\n    celular = parseInt(celular);\n\n    if (recarga > 0) {\n      axios.post('http://localhost:4000/api/billetera/recarga/', {\n        recarga,\n        documento,\n        celular\n      }).then(response => {\n        console.log(response, \"RESPUESTA CONSULTAR BILLETERA\");\n        Swal.fire({\n          title: 'Recarga Exitosa',\n          text: `Se han agregado ${recarga} a su billetera`,\n          icon: 'success',\n          confirmButtonText: 'Ok'\n        });\n        setInforBilletera({ ...InforBilletera,\n          recarga: 0,\n          saldo: saldo + recarga\n        });\n        console.log(InforBilletera, \"INFO DE BILLETERA AL PROCESAR SOLICTUD DE PAGO\");\n      }).catch(error => {\n        console.log(error, \"ERROR AL RECARGAR\"); //dispatch({ type: ERROR_FETCH, payload: error.message })\n\n        Swal.fire({\n          title: error.response ? error.response.data.status : 'ERROR!',\n          text: error.response ? error.response.data.data : error.message,\n          icon: 'error',\n          confirmButtonText: 'Ok'\n        });\n      });\n    }\n  };\n\n  const PrePagar = () => {\n    setInforBilletera({ ...InforBilletera,\n      action: 'pagar'\n    });\n    console.log(FormData, \"FORM DATA DESPUES DE PREPAGAR\");\n    let {\n      monto_pago,\n      saldo,\n      documento,\n      celular,\n      mail\n    } = InforBilletera;\n    saldo = parseInt(saldo);\n    monto_pago = parseInt(monto_pago);\n    celular = parseInt(celular);\n\n    if (monto_pago != 0) {\n      axios.post('http://localhost:4000/api/billetera/pagar/', {\n        saldo,\n        monto_pago,\n        documento,\n        celular,\n        mail\n      }).then(response => {\n        console.log(response, \"RESPUESTA CONSULTAR BILLETERA\");\n        Swal.fire({\n          title: 'Solicitud de Pago Realizada',\n          text: `Se ha enviado a su mail ${mail} la informacion para confirmar el pago`,\n          icon: 'success',\n          confirmButtonText: 'Ok'\n        });\n        console.log(InforBilletera, \"INFO DE BILLETERA AL PROCESAR SOLICTUD DE PAGO\");\n      }).catch(error => {\n        console.log(error, \"ERROR AL SOLICITAR EL PAGO\"); //dispatch({ type: ERROR_FETCH, payload: error.message })\n\n        Swal.fire({\n          title: error.response ? error.response.data.status : 'ERROR!',\n          text: error.response ? error.response.data.data : error.message,\n          icon: 'error',\n          confirmButtonText: 'Ok'\n        });\n      });\n    }\n  };\n\n  const PreConfirmar = () => {\n    setInforBilletera({ ...InforBilletera,\n      action: 'confirmar'\n    });\n    let {\n      token,\n      monto_pago,\n      saldo\n    } = InforBilletera;\n    token = parseInt(token);\n\n    if (token !== 0) {\n      axios({\n        url: 'http://localhost:4000/api/billetera/confirmar/',\n        method: 'post',\n        data: {\n          token\n        },\n        withCredentials: true\n      }).then(response => {\n        console.log(response, \"RESPUESTA A CONFIRMAR PAGO\");\n        Swal.fire({\n          title: 'PAGO CONFIRMADO',\n          text: `Se ha descontado de su cuenta ${monto_pago}`,\n          icon: 'success',\n          confirmButtonText: 'Ok'\n        });\n        console.log(InforBilletera, \"INFO DE BILLETERA AL CONFIRMAR PAGO\");\n        setInforBilletera({ ...InforBilletera,\n          token: 0,\n          saldo: parseInt(saldo) - parseInt(monto_pago)\n        });\n      }).catch(error => {\n        console.log(error, \"ERROR AL CONFIRMAR PAGO\"); //dispatch({ type: ERROR_FETCH, payload: error.message })\n\n        Swal.fire({\n          title: error.response ? error.response.data.status : 'ERROR!',\n          text: error.response ? error.response.data.data : error.message,\n          icon: 'error',\n          confirmButtonText: 'Ok'\n        });\n      });\n    }\n\n    console.log(FormData, \"FORM DATa DESPUES DE PRECONFIRMR \");\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    console.log(FormData, \"FORM LOCAL STATE\");\n\n    if (FormData.action === 'consultar') {\n      console.log(FormData.action, \"FORM ACTION ES CONSULTAr\");\n      const {\n        documento,\n        celular\n      } = FormData;\n      axios.post('http://localhost:4000/api/billetera/', {\n        documento,\n        celular\n      }).then(response => {\n        console.log(response, \"RESPUESTA CONSULTAr BILLETERA\");\n        Swal.fire({\n          title: 'Busqueda Exitosa!',\n          text: `A continuacion se mustran los datos de su billetera`,\n          icon: 'success',\n          confirmButtonText: 'Ok'\n        });\n        setInforBilletera({ ...InforBilletera,\n          saldo: response.data.data.saldo,\n          ultima_actividad: response.data.data.updatedAt,\n          cliente: response.data.data.Cliente.nombres,\n          documento: response.data.data.Cliente.documento,\n          mail: response.data.data.Cliente.mail,\n          celular: response.data.data.Cliente.celular\n        });\n        console.log(InforBilletera, \"INFO DE BILLETERA\");\n      }).catch(error => {\n        console.log(error, \"error response from fetch\"); //dispatch({ type: ERROR_FETCH, payload: error.message })\n\n        Swal.fire({\n          title: error.response ? error.response.data.status : 'ERROR!',\n          text: error.response ? error.response.data.data : error.message,\n          icon: 'error',\n          confirmButtonText: 'Ok'\n        });\n        setInforBilletera('');\n      });\n    } else {\n      Swal.fire({\n        title: 'ERROR!',\n        text: 'Error al enviar los datos',\n        icon: 'error',\n        confirmButtonText: 'Ok'\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StyledBilletera, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"documento\",\n    id: \"documento\",\n    placeholder: \"documento\",\n    required: true,\n    value: FormData.documento,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"celular\",\n    id: \"celular\",\n    placeholder: \"celular\",\n    required: true,\n    minLength: \"9\",\n    maxLength: \"9\",\n    required: true,\n    value: FormData.celular,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, FormData.action))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-billetera\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, InforBilletera.saldo ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"datos-billetera\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"saldo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }\n  }, \"SALDO\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }\n  }, InforBilletera.saldo)), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"actividad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }\n  }, \"Ultima Actividad\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 19\n    }\n  }, moment(InforBilletera.ultima_actividad, moment.ISO_8601).fromNow())), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"usuario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, \"USUARIO\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 19\n    }\n  }, InforBilletera.cliente)), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"acciones\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: Recargar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 19\n    }\n  }, \"Recargar\"), InforBilletera.action === 'recargar' && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"recarga\",\n    id: \"recarga\",\n    placeholder: \"0\",\n    min: \"1\",\n    max: \"999999\",\n    required: true,\n    onChange: onChangePagarConfirmar,\n    value: InforBilletera.recarga,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: PrePagar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 19\n    }\n  }, \"Pagar\"), InforBilletera.action === 'pagar' && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"monto_pago\",\n    id: \"monto_pago\",\n    placeholder: \"0\",\n    min: \"1\",\n    max: parseInt(InforBilletera).toString(),\n    required: true,\n    onChange: onChangePagarConfirmar,\n    value: InforBilletera.monto_pago,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: PreConfirmar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 19\n    }\n  }, \"Confirmar\"), InforBilletera.action === 'confirmar' && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"token\",\n    id: \"token\",\n    placeholder: \"0\",\n    min: \"000000\",\n    max: \"999999\",\n    required: true,\n    onChange: onChangePagarConfirmar,\n    value: InforBilletera.token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 23\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }, \"Aqui se mostrara informaci\\xF3n de la billetera\")));\n};\n\nexport default Billetera;","map":{"version":3,"sources":["C:/Users/martineztrujillo.8/Downloads/test-epayco-master/test-epayco-master/frontend/app/src/pages/Billetera.jsx"],"names":["React","useState","useEffect","useReducer","useContext","GlobalState","reducer","initialState","Link","Swal","axios","moment","StyledBilletera","defaults","withCredentials","Billetera","history","initialData","cliente","documento","saldo","recarga","ultima_actividad","token","action","monto_pago","mail","celular","FormData","setFormData","InforBilletera","setInforBilletera","onChange","e","target","name","value","onChangePagarConfirmar","console","log","Recargar","parseInt","post","then","response","fire","title","text","icon","confirmButtonText","catch","error","data","status","message","PrePagar","PreConfirmar","url","method","onSubmit","preventDefault","updatedAt","Cliente","nombres","ISO_8601","fromNow","toString"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useReducer, useContext} from 'react'\nimport {GlobalState, reducer, initialState} from '../store/store'\nimport { Link } from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport axios from 'axios'\nimport moment from 'moment';\nimport StyledBilletera from '../styles/StyledBilletera'\n\n\naxios.defaults.withCredentials = true\n\n\n\n\nconst Billetera = ({history}) => {\n\n  \n  const initialData = {\n        cliente: '',\n        documento: '',\n        saldo: 0,\n        recarga: 0,\n        ultima_actividad: '',\n        token: 0,\n        action: 'consultar',\n        monto_pago: 0,\n        mail: '',\n        celular: null\n  }\n\n    const [FormData, setFormData] = useState(initialData)\n    const [InforBilletera, setInforBilletera] = useState(initialData)\n      \n\n    const onChange = (e) => {\n      //console.log([e.target.name], e.target.value);\n      setFormData({...FormData, [e.target.name]: e.target.value})\n      //console.log(FormData, \"FORMDATA\");\n    }\n\n    const onChangePagarConfirmar = (e) => {\n        //console.log([e.target.name], e.target.value);\n        setInforBilletera({...InforBilletera, [e.target.name]: e.target.value})\n        console.log(InforBilletera, \"SALDO A PAGAR\");\n      }\n    \n    \n      const Recargar = () => {\n\n        setInforBilletera({\n          ...InforBilletera, \n          action: 'recargar'})\n        console.log(FormData, \"FORM DATa DESPUES DE PREPAGAR\")\n\n        let {recarga, saldo, documento, celular} = InforBilletera\n\n        saldo = parseInt(saldo)\n        recarga = parseInt(recarga)\n        celular = parseInt(celular)\n\n        if(recarga > 0) {\n            axios.post('http://localhost:4000/api/billetera/recarga/', {\n          recarga,\n          documento,\n          celular,\n        })\n        .then(response => {\n          console.log(response, \"RESPUESTA CONSULTAR BILLETERA\")\n          Swal.fire({\n            title: 'Recarga Exitosa',\n            text: `Se han agregado ${recarga} a su billetera`,\n            icon: 'success',\n            confirmButtonText: 'Ok'\n          })\n          setInforBilletera({\n            ...InforBilletera, \n            recarga: 0,\n            saldo: saldo + recarga\n          })\n        console.log(InforBilletera, \"INFO DE BILLETERA AL PROCESAR SOLICTUD DE PAGO\")\n        })\n        .catch(error => {\n          console.log(error, \"ERROR AL RECARGAR\");\n          //dispatch({ type: ERROR_FETCH, payload: error.message })\n          Swal.fire({\n            title: error.response ?  error.response.data.status : 'ERROR!',\n            text: error.response ?  error.response.data.data : error.message,\n            icon: 'error',\n            confirmButtonText: 'Ok'\n          })\n        })\n        }\n    }\n\n\n    const PrePagar = () =>{\n            setInforBilletera({\n                ...InforBilletera, \n                action: 'pagar'})\n            console.log(FormData, \"FORM DATA DESPUES DE PREPAGAR\")\n\n        let {monto_pago, saldo, documento, celular, mail} = InforBilletera\n\n        saldo = parseInt(saldo)\n        monto_pago = parseInt(monto_pago)\n        celular = parseInt(celular)\n\n        if(monto_pago != 0) {\n            axios.post('http://localhost:4000/api/billetera/pagar/', {\n          saldo,\n          monto_pago,\n          documento,\n          celular,\n          mail\n        })\n        .then(response => {\n          console.log(response, \"RESPUESTA CONSULTAR BILLETERA\")\n          Swal.fire({\n            title: 'Solicitud de Pago Realizada',\n            text: `Se ha enviado a su mail ${mail} la informacion para confirmar el pago`,\n            icon: 'success',\n            confirmButtonText: 'Ok'\n          })\n        console.log(InforBilletera, \"INFO DE BILLETERA AL PROCESAR SOLICTUD DE PAGO\")\n        })\n        .catch(error => {\n          console.log(error, \"ERROR AL SOLICITAR EL PAGO\");\n          //dispatch({ type: ERROR_FETCH, payload: error.message })\n          Swal.fire({\n            title: error.response ?  error.response.data.status : 'ERROR!',\n            text: error.response ?  error.response.data.data : error.message,\n            icon: 'error',\n            confirmButtonText: 'Ok'\n          })\n        })\n        }            \n    }\n\n    const PreConfirmar = () => {\n        setInforBilletera({\n            ...InforBilletera, \n            action: 'confirmar'\n        })\n        let {token, monto_pago, saldo} = InforBilletera\n\n        token = parseInt(token)\n        if(token !== 0) {\n            axios({ \n                url: 'http://localhost:4000/api/billetera/confirmar/',\n                method: 'post',\n                data: {token},\n                withCredentials: true\n            })\n        .then(response => {\n          console.log(response, \"RESPUESTA A CONFIRMAR PAGO\")\n          Swal.fire({\n            title: 'PAGO CONFIRMADO',\n            text: `Se ha descontado de su cuenta ${monto_pago}`,\n            icon: 'success',\n            confirmButtonText: 'Ok'\n          })\n          console.log(InforBilletera, \"INFO DE BILLETERA AL CONFIRMAR PAGO\")\n        \n            setInforBilletera({\n            ...InforBilletera, \n            token: 0,\n            saldo: (parseInt(saldo)-parseInt(monto_pago))\n          })\n        })\n        .catch(error => {\n          console.log(error, \"ERROR AL CONFIRMAR PAGO\");\n          //dispatch({ type: ERROR_FETCH, payload: error.message })\n          Swal.fire({\n            title: error.response ?  error.response.data.status : 'ERROR!',\n            text: error.response ?  error.response.data.data : error.message,\n            icon: 'error',\n            confirmButtonText: 'Ok'\n          })\n        })\n      }\n        console.log(FormData, \"FORM DATa DESPUES DE PRECONFIRMR \")\n    }\n\n    const onSubmit = async(e) => {\n      e.preventDefault()\n      console.log(FormData, \"FORM LOCAL STATE\")\n      if (FormData.action === 'consultar') {\n        console.log(FormData.action, \"FORM ACTION ES CONSULTAr\")\n        const {documento, celular} = FormData\n        \n        axios.post('http://localhost:4000/api/billetera/', {\n          documento,\n          celular,\n        })\n        .then(response => {\n          console.log(response, \"RESPUESTA CONSULTAr BILLETERA\")\n          Swal.fire({\n            title: 'Busqueda Exitosa!',\n            text: `A continuacion se mustran los datos de su billetera`,\n            icon: 'success',\n            confirmButtonText: 'Ok'\n          })\n          setInforBilletera({\n                ...InforBilletera, \n                saldo: response.data.data.saldo,\n                ultima_actividad: response.data.data.updatedAt,\n                cliente: response.data.data.Cliente.nombres,\n                documento: response.data.data.Cliente.documento,\n                mail: response.data.data.Cliente.mail,\n                celular: response.data.data.Cliente.celular,\n                \n          })\n          console.log(InforBilletera, \"INFO DE BILLETERA\")\n        })\n        .catch(error => {\n          console.log(error, \"error response from fetch\");\n          //dispatch({ type: ERROR_FETCH, payload: error.message })\n          Swal.fire({\n            title: error.response ?  error.response.data.status : 'ERROR!',\n            text: error.response ?  error.response.data.data : error.message,\n            icon: 'error',\n            confirmButtonText: 'Ok'\n          })\n          setInforBilletera('')\n        })\n      }\n      else{  \n        \n        Swal.fire({\n          title: 'ERROR!',\n          text: 'Error al enviar los datos',\n          icon: 'error',\n          confirmButtonText: 'Ok'\n        })\n      }\n      \n\n    }\n\n    return (\n        <StyledBilletera>\n          <div className='card-form'>\n              <form onSubmit={onSubmit}>\n                <input type=\"text\" name=\"documento\" id=\"documento\" placeholder=\"documento\" required value={FormData.documento} onChange={onChange}/>\n                <input type=\"text\" \n                        name=\"celular\" \n                        id=\"celular\" \n                        placeholder=\"celular\" \n                        required\n                        minLength=\"9\" maxLength=\"9\" required\n                        value={FormData.celular} onChange={onChange}/>                \n                <button type=\"submit\">{FormData.action}</button>\n              </form>\n          </div>\n          <div className=\"card-billetera\">\n              {InforBilletera.saldo\n              ? \n              <div className=\"datos-billetera\">\n                <section className=\"saldo\">\n                  <p>SALDO</p>\n                  <h2>{InforBilletera.saldo}</h2>\n                </section>\n                <section className=\"actividad\">\n                  <p>Ultima Actividad</p>\n                  <h3>{moment(InforBilletera.ultima_actividad, moment.ISO_8601).fromNow()}</h3>\n                </section>\n                <section className=\"usuario\">\n                <p>USUARIO</p>\n                  <h3>{InforBilletera.cliente}</h3>\n                  </section>\n                <section className=\"acciones\">\n                  <button onClick={Recargar}>Recargar</button>\n                  {\n                      InforBilletera.action === 'recargar' && \n                      <input type='number' \n                            name='recarga' \n                            id='recarga'\n                            placeholder='0'\n                            min=\"1\"\n                            max=\"999999\"\n                            required\n                            onChange={onChangePagarConfirmar}\n                            value={InforBilletera.recarga}/>\n                            \n                  }\n                  <button onClick={PrePagar}>Pagar</button>\n                  {\n                      InforBilletera.action === 'pagar' && \n                      <input type='number' \n                            name='monto_pago' \n                            id='monto_pago'\n                            placeholder='0'\n                            min=\"1\"\n                            max={(parseInt(InforBilletera)).toString()}\n                            required\n                            onChange={onChangePagarConfirmar}\n                            value={InforBilletera.monto_pago}/>\n\n                  }\n                  <button onClick={PreConfirmar}>Confirmar</button>\n                  {\n                      InforBilletera.action === 'confirmar' && \n                      <input type='number' \n                            name='token' \n                            id='token'\n                            placeholder=\"0\"\n                            min=\"000000\"\n                            max=\"999999\"\n                            required\n                            onChange={onChangePagarConfirmar}\n                            value={InforBilletera.token}/>\n                  }\n              </section>\n            </div>\n          :\n              \n              <h1>Aqui se mostrara información de la billetera</h1>\n          }\n              \n          </div>\n            \n        </StyledBilletera>\n    )\n}\n\nexport default Billetera"]},"metadata":{},"sourceType":"module"}